Simple solution
    Select DISTINCT l1.Num from Logs l1, Logs l2, Logs l3 
    where l1.Id=l2.Id-1 and l2.Id=l3.Id-1 
    and l1.Num=l2.Num and l2.Num=l3.Num

----------------------------------------------------------------------------------------------------
Solution with user defined variables
    select DISTINCT num FROM
    (select num,
    	case 
    		when @record = num then @count:=@count+1
    		when @record <> @record:=num then @count:=1 end as n
        from 
    	    Logs ,(select @count:=0,@record:=(SELECT num from Logs limit 0,1)) r
    ) a
    where a.n>=3

----------------------------------------------------------------------------------------------------
An ugly solution
`select distinct(a.Num) from Logs a, Logs b,Logs c where a.Id=b.Id+1 and a.Num=b.Num and b.Id=c.Id+1 and b.Num=c.Num`

----------------------------------------------------------------------------------------------------
Accepted solution without joins (works in n-consecutive cases with slight modification)
    select distinct Num from (
        select
            Num,
            case
                when @prevNum = Num then @count := @count + 1
                when (@prevNum := Num) is not null then @count := 1
            end n
        from Logs, (select @prevNum := NULL) r
        order by Id
    ) a where n >= 3

----------------------------------------------------------------------------------------------------
Simple sql with join, 1484 ms
    select distinct l1.num
    from Logs l1 
        join Logs l2 on l1.id=l2.id-1 
        join Logs l3 on l1.id=l3.id-2
    where l1.num=l2.num and l2.num=l3.num

----------------------------------------------------------------------------------------------------
Explanation of consecutive numbers problems
