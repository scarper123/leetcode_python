My 1 lines code in Java, C++, and Python
Java:

    return n == 0 ? "" : convertToTitle(--n / 26) + (char)('A' + (n % 26));

C++:

    return n == 0 ? "" : convertToTitle(n / 26) + (char) (--n % 26 + 'A');

update: because the behavior of different compilers, the safe version should be:

    return n == 0 ? "" : convertToTitle((n - 1) / 26) + (char) ((n - 1) % 26 + 'A');

Python:

    return "" if num == 0 else self.convertToTitle((num - 1) / 26) + chr((num - 1) % 26 + ord('A'))

----------------------------------------------------------------------------------------------------
Accepted Java solution
    public class Solution {
        public String convertToTitle(int n) {
            StringBuilder result = new StringBuilder();
    
            while(n>0){
                n--;
                result.insert(0, (char)('A' + n % 26));
                n /= 26;
            }
    
            return result.toString();
        }
    }

----------------------------------------------------------------------------------------------------
Share my simple solution, just a little trick to handle corner case 26
    string convertToTitle(int n) {
            string ans;
            while (n) {
                ans = char ((n - 1) % 26 + 'A') + ans;
                n = (n - 1) / 26;
            }
            return ans;
        }

----------------------------------------------------------------------------------------------------
My easy to understand JAVA solution
Instead of 1 -> A, 26 -> Z, we can assume that 0 -> A, 25 -> Z, and then here comes the base 26 representation, it's similar when you convert a number from base 10 to base 2

    public class Solution {
    public String convertToTitle(int n) {
        String res = "";
        while(n != 0) {
            char ch = (char)((n - 1) % 26 + 65);
            n = (n - 1) / 26;
            res = ch + res;
        }
        return res;
    }
    }

----------------------------------------------------------------------------------------------------
Python solution with explanation
